/*program 1*/
/*perform recursive binary search and linear search and find the time
required to search an element*/
#include<stdio.h>
#include<time.h>
int a[100],key,low,high,temp,i,j,result,n;
void get_data()
{
      printf("\n************************output*************************\n");
      printf("enter the number of random elements\n");
      scanf("%d",&n);
      printf("%d\n",n);
      printf("enter the elements of an array\n");
      for(i=0;i<n;i++)
      a[i]=rand()%1000;
      for(i=0;i<n;i++)
      {
      printf("%d\n",a[i]);
      }
}
void display()
{
      printf("the sorted array is\n");
      for(i=0;i<n;i++)
      printf("%d\n",a[i]);
}
void bubble_sort()
{
      for(i=0;i<n-1;i++)
      for(j=0;j<n-i-1;j++)
      if(a[j]>a[j+1])
      {
      temp=a[j];
      a[j]=a[j+1];
      a[j+1]=temp;
      }
}
binary_search(int low,int high)
{
	int mid;
	mid=(low+high)/2;
	if(low>high)
	return -1;
	else
	if(key>a[mid])
	return binary_search(mid+1,high);
	else
	if(key<a[mid])
	return binary_search(low,mid-1);
	else
	return mid;

 }
   void linear_search(int i)
 {
 if(key==a[i])
 {
 printf("by linear search:element is found at %d position\n",i+1);
 return;
 }
   if(i>=n)
   {
   printf("by linear search:element is not found");
   return;
   }
   linear_search(i+1);
   }
     void main()
     {
     clock_t start,end;
     int x;
     clrscr();
     get_data();
     bubble_sort();
     display();
     printf("enter the element to be searched\n");
     scanf("%d",&key);
     printf("%d\n",key);
     start=clock();
     result=binary_search(0,n-1);
     if(result==(-1))
     printf("\nbinary search:element not found\n");
     else
     printf("binary search:element found at %d position\n",result+1);
     linear_search(0);
     end=clock();
     printf("time taken=%f",(end-start)/CLK_TCK);
     printf("\n***********************output***********************\n");
     getch();
     }
